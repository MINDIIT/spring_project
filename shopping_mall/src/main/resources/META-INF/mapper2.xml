<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shopping">
	<!-- 아이디 중복 체크 -->
	<select id="idcheck" parameterType="String" resultType="int">
		select count(*) as ctn from admin_user where admin_id=#{admin_id}
	</select>
	<!-- 로그인 -->
	<select id="login" parameterType="Map" resultType="admindao">
		select * from admin_user where admin_id=#{admin_id} and admin_pass=#{admin_pass} order by aidx desc;
	</select>
	<!-- 관리자 승인 여부 핸들링 -->
	<update id="agree" parameterType="Map">
		update admin_user set admin_confirm=#{admin_confirm} where aidx=#{aidx}
	</update>
	<!-- 관리자 승인리스트 출력 -->
	<select id="standby_list" resultType="admindao">
		select * from admin_user order by aidx desc
	</select>
	<!-- 관리자 수  -->
	<select id="admin_list_count" resultType="int">
		SELECT COUNT(*) AS ctn FROM admin_user
	</select>
	
	<!-- 일반 회원 계정 승인 여부 핸들링 -->
	<update id="member_account" parameterType="Map">
		UPDATE member SET account_suspended = #{account_suspended} WHERE midx = #{midx}
	</update>
	
	<!-- 이용 약관 출력 -->
	<select id="get_terms" parameterType="Map" resultType="termsdao">
		SELECT * FROM terms
	</select>
	
	<!-- 약관 수정 -->
	<insert id="terms_modify" parameterType="Map">
		INSERT INTO terms (tidx,term_type, term_content,create_at,updated_at) VALUES ('0',#{term_type}, #{term_content},now(),now()) 
		ON DUPLICATE KEY UPDATE
		term_content = #{term_content};
	</insert>
	
	<!-- 관리자 추가 승인대기 -->
	<insert id="admin_standbyadd" parameterType="admindao">
		insert into admin_user (aidx,admin_id,admin_pass,admin_name,admin_email,admin_hp,admin_team,admin_position,admin_confirm,admin_join)
		values('0',#{admin_id},#{admin_pass},#{admin_name},#{admin_email},#{admin_hp},#{admin_team},#{admin_position},'N',now());
	</insert>
	
	<!-- 웹사이트 설정 테이블 삽입 -->
	<insert id="insert_websiteinfo" parameterType="Map" useGeneratedKeys="true" keyProperty="sidx">
		insert into website_settings(admin_id,website_title,administrator_email_address,point_use,registration_bonus_points,permission_level,add_time)
		values (#{admin_id},#{website_title},#{administrator_email_address},#{point_use},#{registration_bonus_points},#{permission_level},now());
	</insert>
	
	<!-- 웹사이트 설정 정보 출력 -->
	<select id="get_websiteinfo" resultType="websitesettingsdao">
		SELECT * FROM website_settings ORDER BY add_time DESC LIMIT 1
	</select>
	
	<!-- 회사 정보 테이블 삽입 -->
	<insert id="insert_companyinfo" parameterType="Map">
		insert into company_info(sidx,company_name,business_registration_number,ceo_name,company_phone_number,online_business_registration_number,value_added_service_provider_number,business_location_postal_code,business_location_address,data_protection_officer_name,data_protection_officer_email)
		values (#{sidx},#{company_name},#{business_registration_number},#{ceo_name},#{company_phone_number},#{online_business_registration_number},#{value_added_service_provider_number},#{business_location_postal_code},#{business_location_address},#{data_protection_officer_name},#{data_protection_officer_email});
	</insert>
	
	<!-- 회사 정보 출력 -->
	<select id="get_companyinfo" resultType="companyinfo">
		SELECT * FROM company_info ORDER BY sidx DESC LIMIT 1
	</select>
	
	<!-- 결제 및 배송 설정 테이블 삽입 -->
	<insert id="insert_payment_delivery_settings" parameterType="Map">
		insert into payment_delivery_settings(sidx,bank_transfer_bank_name,bank_transfer_account_number,credit_card_payment,mobile_payment,book_voucher_payment,min_payment_point,max_payment_point,cash_receipt_usage,delivery_company_name,delivery_fee,preferred_delivery_date_usage)
		value (#{sidx},#{bank_transfer_bank_name},#{bank_transfer_account_number},#{credit_card_payment},#{mobile_payment},#{book_voucher_payment},#{min_payment_point},#{max_payment_point},#{cash_receipt_usage},#{delivery_company_name},#{delivery_fee},#{preferred_delivery_date_usage})
	</insert>
	
	<!-- 결제 및 배송 정보 출력 -->
	<select id="get_payment_deliveryinfo" resultType="paymentdao">
		SELECT * FROM payment_delivery_settings ORDER BY sidx DESC LIMIT 1
	</select>	
	
	<!-- 카테고리 등록 -->
	<insert id="insert_cate" parameterType="catecodedao">
		insert into classification_code(cidx,admin_id,classification_code,main_menu_code,main_menu_name,menu_usage,code_add)
		value ('0',#{admin_id},#{classification_code},#{main_menu_code},#{main_menu_name},#{menu_usage},now())
	</insert>
	<!-- 상품 코드 중복 확인 -->
	<select id="product_code_ck" parameterType="String" resultType="int">
		select count(*) as ctn from products where product_code=#{product_code}
	</select>
	<!-- 상품 등록 -->
	<insert id="product_insert" parameterType="productsdao">
		insert into products (pidx,admin_id,classification_code,main_menu_code,main_menu_name,product_code,product_name,product_additional_description,product_price,discount_rate,discount_price,product_stock,is_available,is_sold_out_early,main_product_image1,main_product_image2,main_product_image3,product_detailed_description,product_insert_time)
		values ('0',#{admin_id},#{classification_code},#{main_menu_code},#{main_menu_name},#{product_code},#{product_name},#{product_additional_description},#{product_price},#{discount_rate},#{discount_price},#{product_stock},#{is_available},#{is_sold_out_early},#{main_product_image1},#{main_product_image2},#{main_product_image3},#{product_detailed_description},now())
	</insert>
	
	
	<!-- 상품 리스트 갯수, 검색된 리스트 갯수 -->
	<select id="product_count" resultType="int" parameterType="Map">
		select count(*) as ctn from products
		<where>
			<if test="admin_id != 'master'">
				admin_id =#{admin_id}
			</if>
			<if test="search_part != null and search_part != '' and search_word != null and search_word != ''">
				<if test="admin_id != 'master'">
				 	and
				</if>
				<choose>
					<when test="search_part == 1">
						product_name LIKE CONCAT('%', #{search_word}, '%')
					</when>
					<when test="search_part == 2">
						 product_code = #{search_word}
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 카테고리 리스트 갯수, 검색된 카테고리 리스트 갯수 -->
	<select id="category_count" resultType="int" parameterType="Map">
		SELECT COUNT(*) AS ctn FROM classification_code
		<where>
			menu_usage='Y'
			<if test="admin_id != 'master'">
				AND admin_id = #{admin_id}
			</if>
			<if test="search_part_category != null and search_part_category != '' and search_word_category != null and search_word_category != ''">
				<choose>
					<when test="search_part_category == 1">
						AND main_menu_name LIKE CONCAT('%',#{search_word_category},'%')
					</when>
					<when test="search_part_category == 2">
						AND main_menu_code =#{search_word_category}
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 상품 리스트 출력, 검색 -->
    <select id="product_list" resultType="productsdao" parameterType="Map">
        SELECT * FROM products
        <where>
            <if test="admin_id != 'master'">
                admin_id = #{admin_id}
            </if>
            <if test="search_part != null and search_part != '' and search_word != null and search_word != ''">
                <if test="admin_id != 'master'">
                    AND
                </if>
                <choose>
                    <when test="search_part == 1">
                        product_name LIKE CONCAT('%', #{search_word}, '%')
                    </when>
                    <when test="search_part == 2">
                        product_code = #{search_word}
                    </when>
                </choose>
            </if>
        </where>
        ORDER BY pidx DESC LIMIT #{pageno},#{startpg}
    </select>
    
	<!-- 페이징 처리 된 카테고리 리스트 출력, 검색 , -->
	<select id="category_list_paginated" resultType="catecodedao" parameterType="Map">
		SELECT * FROM classification_code
		<where>
			menu_usage='Y'
			<if test="admin_id != 'master'">
				AND admin_id = #{admin_id}
			</if>
			<if test="search_part_category != null and search_part_category != '' and search_word_category != null and search_word_category != ''">
				<choose>
					<when test="search_part_category == 1">
						AND main_menu_name LIKE CONCAT('%',#{search_word_category},'%')
					</when>
					<when test="search_part_category == 2">
						AND main_menu_code =#{search_word_category}
					</when>
				</choose>
			</if>
		</where>
		ORDER BY admin_id ASC, classification_code ASC, main_menu_code ASC LIMIT #{pageno},#{startpg}
	</select>
	
	<!-- 카테고리 전체 데이터 출력-(상품 등록 페이지에 옵션에 쓰임) -->
	<select id="cate_all_data" resultType="catecodedao" parameterType="Map">
		SELECT * FROM classification_code
		<where>
			menu_usage='Y'
			<if test="admin_id != 'master'">
				AND admin_id = #{admin_id}
			</if>
		</where>
		ORDER BY admin_id ASC, classification_code ASC, main_menu_code ASC		
	</select>
	
	<!-- cidx 리스트를 이용해서 main_menu_code 값을 찾는 쿼리 -->
	<select id="find_main_menu_code" resultType="String">
		SELECT main_menu_name FROM classification_code WHERE cidx IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<!--  이미 카테고리에 등록된 상품이 있는지 확인하는 코드-->
	<select id="find_exist_main_menu_name" resultType="int">
		SELECT COUNT(*) FROM products WHERE main_menu_name IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")" >
			#{item}
		</foreach>
	</select>
	
	<!-- 카테고리 삭제 -->
	<delete id="category_delete" parameterType="list">
		DELETE FROM classification_code WHERE cidx IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- 상품 삭제 -->
	<delete id="product_delete" parameterType="list">
		DELETE FROM products WHERE pidx IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- 상품 등록 시 첨부된 첨부파일 경로 조회 -->
	<select id="select_file_path_products" resultType="Map" parameterType="List">
		SELECT main_product_image1, main_product_image2, main_product_image3
		FROM products
		WHERE pidx IN 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<!-- 공지사항 삭제시 첨부된 첨부파일 경로 조회 -->
	<select id="select_file_path_notice" resultType="Map" parameterType="list">
		SELECT file_name FROM notice_attachments WHERE nidx IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")" >
			#{item}
		</foreach>
	</select>
	
	<!-- 공지사항 삭제 -->
	<delete id="notice_delete" parameterType="list">
		DELETE FROM notice WHERE nidx IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- 공지사항 첨부파일 삭제 -->
	<delete id="notice_attachments_delete" parameterType="list">
		DELETE from notice_attachments WHERE nidx IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- 공지사항 게시글 등록 -->
	<insert id="notice_insert" parameterType="noticedao" useGeneratedKeys="true" keyProperty="nidx">
		insert into notice (admin_id,admin_name,notice_title,notice_content,is_pinned,view_count,notice_create,notice_update)
		values (#{admin_id},#{admin_name},#{notice_title},#{notice_content},#{is_pinned},#{view_count},now(),now())
	</insert>
	
	<!-- 공지사항 등록 - 첨부파일 -->
	<insert id="notice_insert_attachments" parameterType="noticeattachmentsdao">
		insert into notice_attachments(nidx,file_name,file_path,upload_time)
		values (#{nidx},#{file_name},#{file_path},now())
	</insert>
	
	<!-- 공지사항 게시글 리스트 출력 -->
	<select id="notice_list" parameterType="map" resultType="noticedao">
		SELECT * FROM notice 
		<where>
			<if test="admin_id != 'master'">
				admin_id =#{admin_id}
			</if>
		</where>
		ORDER BY is_pinned asc, notice_create DESC limit #{startpg},#{pageno}
	</select>
	
	<!-- 공지사항 게시글 view page 출력 -->
	<select id="notice_view" parameterType="Map" resultType="noticedao">
		SELECT * FROM notice
		<where>
			nidx =#{nidx}
			<if test="admin_id != 'master'">
				AND admin_id =#{admin_id}
			</if>
		</where>
	</select>
	
	<!-- 공지사항 게시글 view page 첨부파일 출력 -->
	<select id="notice_view_attach" parameterType="Map" resultType="noticeattachmentsdao">
		SELECT * FROM notice_attachments WHERE nidx=#{nidx}
	</select>
	
	<!-- 공지사항 게시글 리스트 갯수 -->
	<select id="notice_list_count" parameterType="Map" resultType="int">
		SELECT COUNT(*) AS ctn FROM notice
		<where>
			<if test="admin_id != 'master'">
				admin_id =#{admin_id}
			</if>		
		</where>
	</select>
	
	<!-- 공지사항 수정 페이지 - 공지사항 수정 -->
	<update id="update_notice" parameterType="noticedao">
		UPDATE notice SET notice_title = #{notice_title},
						notice_content = #{notice_content},
						is_pinned = #{is_pinned},
						notice_update = now()
						WHERE nidx = #{nidx}	
	</update>
	
	<!-- 공지사항 수정 페이지 - 첨부파일 삭제(파일 경로 이용) -->
	<delete id="delete_file_path">
		DELETE FROM notice_attachments WHERE file_path IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- 새로운 첨부파일 삽입 -->
	<insert	id="modify_insert_attachment" parameterType="List">
		INSERT INTO notice_attachments (nidx,file_name,file_path,upload_time)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.nidx},#{item.file_name},#{item.file_path},now())
		</foreach>
	</insert>
	
	<!-- 조회수 증가 -->
	<update id="notice_count_view">
		update notice set view_count = view_count + 1 where nidx=#{nidx} 
	</update>
	
	<!-- 쇼핑몰 회원 리스트 페이지 - 리스트 출력 -->
	<select id="memberlist" parameterType="Map" resultType="memberdao">
		SELECT * FROM member ORDER BY midx DESC limit #{startpg},#{pageno}
	</select>
	
	<!-- 쇼핑몰 회원 리스트 페이지 - 총 회원 수  -->
	<select id="member_list_count" resultType="int">
		SELECT COUNT(*) AS ctn FROM member 
	</select>
</mapper>